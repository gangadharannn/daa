def knapsack(W, weights, values):
    # Calculate the value-to-weight ratios for each item
    ratios = [v / w for v, w in zip(values, weights)]
    n = len(weights)
    index = list(range(n))

    # Sort items by ratio in descending order
    index.sort(key=lambda i: ratios[i], reverse=True)

    max_value = 0
    fractions = [0] * n

    for i in index:
        if weights[i] <= W:
            # Take the whole item
            fractions[i] = 1
            max_value += values[i]
            W -= weights[i]
        else:
            # Take a fraction of the item
            fractions[i] = W / weights[i]
            max_value += values[i] * fractions[i]
            break  # Knapsack is full

    print(fractions)
    return max_value

weights = [10, 20, 30]
values = [60, 100, 120]
W = 50

print(knapsack(W, weights, values))
